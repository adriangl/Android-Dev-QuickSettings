/*
 * Copyright (C) 2017 Adrián García
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Gets the version name from the latest Git tag.
 * example: tag v.3.0.1.2 -> versionName 3.0.1.2
 */

def computeVersionName() {
    def stdout = new ByteArrayOutputStream()
    exec {
        workingDir projectDir
        executable 'git'
        args 'describe', '--abbrev=0', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim().replaceAll('v', '')
}

/*
 * Gets the commit number from the current Git commit
 * example: 538
 */

def computeVersionCode() {
    def stdout = new ByteArrayOutputStream()
    exec {
        workingDir projectDir
        executable 'git'
        args 'rev-list', '--count', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim().toInteger()
}

ext {
    gitSha = 'git rev-parse --short HEAD'.execute([], projectDir).text.trim()
    buildTime = new Date().format("yyyy-MM-dd HH:mm z", TimeZone.getTimeZone("GMT"))
    computeVersionName = this.&computeVersionName
    computeVersionCode = this.&computeVersionCode
}